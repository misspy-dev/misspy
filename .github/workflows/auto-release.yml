# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [released]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry poetry-dynamic-versioning twine
      - name: Get previous tag
        id: pre_tag
        run: |
          echo "::set-output name=pre_tag::$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)"
      - name: Update pyproject.toml
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: "pyproject.toml"
          key: "tool.poetry.version"
          value: steps.pre_tag.outputs.pre_tag
      - name: Build and publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build

  copy-to-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get previous tag
        id: pre_tag
        run: |
          echo "::set-output name=pre_tag::$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)"

      - name: Update pyproject.toml
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: "pyproject.toml"
          key: "tool.poetry.version"
          value: steps.pre_tag.outputs.pre_tag

      - name: Push to release branch
        env:
          USER_TOKEN: ${{ secrets.USER_TOKEN }}
        run: |
          git remote set-url origin https://$USER_TOKEN@github.com/misspy-development/misspy.git
          git push --force-with-lease origin develop:release
